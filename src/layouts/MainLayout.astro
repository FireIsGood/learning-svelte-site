---
import Header from "../components/Header.astro";

export interface Props {
  title: string;
  isSubpage?: boolean;
  noPad?: boolean;
  noMaxWidth?: boolean;
}

const { title, isSubpage, noPad, noMaxWidth } = Astro.props;
const description = "A site I made to learn Svelte";

const subpageLink = isSubpage === false ? null : title;
let optionalClasses = [
  noPad ? "no-pad" : null,
  noMaxWidth ? "no-max-width" : null,
];
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/svg+xml"
      href="/learning-svelte-site/favicon.png"
    />
    <meta name="generator" content={Astro.generator} />
    <!-- OpenGraph Tags -->
    <meta property="og:type" content="article" />
    <meta property="og:locale" content="en" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/learning-svelte-site/favicon.png" />
    <meta property="og:site_name" content="Arkdex" />
    <!-- Title -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <!-- Google Fonts Preconnect -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap"
      rel="stylesheet"
    />
    <!-- Styles -->
    <style lang="scss" is:global>
      *,
      *::after,
      *::before {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      html {
        font-family: "Open Sans", system-ui, sans-serif;
        color: var(--theme-text-main);
      }

      hr {
        border: none;
        border-top: 2px solid var(--theme-hr);
      }

      button {
        padding: 0.5em;
        border: none;
        background-color: var(--theme-button);
        color: inherit;

        &:hover {
          background-color: var(--theme-button-hover);
        }
        &:active {
          background-color: var(--theme-button-active);
        }
      }

      input,
      button {
        font-size: inherit;
      }

      input[type="text"] {
        padding: 0.25em;
        background-color: var(--theme-button-inactive);
        border: 1px solid var(--theme-button-active);

        &:hover {
          border: 1px solid var(--theme-button-hover);
        }

        &:disabled {
          color: var(--theme-text-grey);
          background-color: var(--theme-button-disabled);
        }
      }

      input[type="checkbox"] {
        --checkbox-size: 1.5rem;
        position: relative;
        width: var(--checkbox-size);
        height: var(--checkbox-size);

        &::before {
          opacity: 1;
          content: "";
          position: absolute;
          display: inline-block;
          line-height: var(--checkbox-size);
          text-align: center;
          inset: 0;
          background-color: var(--theme-button-inactive);
          border: 1px solid var(--theme-button-active);
        }

        &:hover::before {
          border: 1px solid var(--theme-button-hover);
        }
        &:active::before {
          background-color: var(--theme-button-active);
        }

        &:checked::before {
          content: "\2713";
          color: var(--theme-button-text);
          background-color: var(--theme-button);
        }
      }

      label {
        user-select: none;
      }
      input + label {
        margin-left: 0.5rem;
      }
      label > input {
        margin-right: 0.25rem;
        user-select: none;
      }
    </style>
    <style lang="scss">
      :root {
        --font-size-base: clamp(1rem, 0.3vw + 0.9rem, 1.1rem);

        --color-hue-main: 290, 40%;
        --color-hue-alt: 130, 40%;

        --theme-bg: hsl(var(--color-hue-main), 96%);
        --theme-hr: hsl(var(--color-hue-main), 30%);

        --theme-header: hsl(var(--color-hue-main), 86%);
        --theme-header-button-hover: hsl(var(--color-hue-main), 82%);
        --theme-header-button-active: hsl(var(--color-hue-main), 80%);
        --theme-header-link-bar: hsl(var(--color-hue-alt), 35%);
        --theme-header-link-text: hsl(var(--color-hue-alt), 10%);
        --theme-header-link-text-bg: hsl(var(--color-hue-alt), 45%);
        --theme-header-link-text-bg-hover: hsl(var(--color-hue-alt), 55%);

        --theme-text-main: hsl(var(--color-hue-main), 7%);
        --theme-text-main-accent: hsl(var(--color-hue-main), 40%);
        --theme-text-alt: hsl(var(--color-hue-alt), 7%);
        --theme-text-alt-accent: hsl(var(--color-hue-alt), 55%);
        --theme-text-grey: hsl(0, 0%, 60%);

        --theme-card: hsl(var(--color-hue-main), 86%);
        --theme-button: hsl(var(--color-hue-main), 84%);
        --theme-button-text: hsl(var(--color-hue-alt), 54%);
        --theme-button-hover: hsl(var(--color-hue-main), 82%);
        --theme-button-active: hsl(var(--color-hue-main), 80%);
        --theme-button-inactive: hsl(var(--color-hue-main), 100%);
        --theme-button-disabled: hsl(var(--color-hue-main), 92%);
      }

      html {
        font-size: var(--font-size-base);
      }

      body {
        background-color: var(--theme-bg);
      }

      main {
        max-width: 75ch;
        margin-inline: auto;
        padding: 1rem;

        &.no-pad {
          padding: 0;
        }
        &.no-max-width {
          max-width: initial;
        }

        > * + * {
          margin-top: 1rem;
        }
      }
    </style>
  </head>
  <body>
    <Header subpage={subpageLink} />
    <main class={optionalClasses.join(" ")}>
      <slot />
    </main>
  </body>
</html>
