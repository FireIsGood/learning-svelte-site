---
import Header from "@components/Header.astro";

export interface Props {
  title: string;
  isSubpage?: boolean;
  noPad?: boolean;
  noMaxWidth?: boolean;
}

const { title, isSubpage, noPad, noMaxWidth } = Astro.props;
const description = "A site I made to learn Svelte";

const subpageLink = isSubpage === false ? null : title;
let optionalClasses = [
  noPad ? "no-pad" : null,
  noMaxWidth ? "no-max-width" : null,
];
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/svg+xml"
      href="/learning-svelte-site/favicon.png"
    />
    <meta name="generator" content={Astro.generator} />
    <!-- OpenGraph Tags -->
    <meta property="og:type" content="article" />
    <meta property="og:locale" content="en" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/learning-svelte-site/favicon.png" />
    <meta property="og:site_name" content="Learning Svelte Site" />
    <!-- Title -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <!-- Google Fonts Preconnect -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap"
      rel="stylesheet"
    />
    <!-- Avoid FOUC -->
    <script is:inline>
      // Set the right color mode based on the user's preferred color scheme.
      const root = document.documentElement;
      const darkMode = localStorage.getItem("darkMode");
      if (null !== darkMode) {
        root.classList.add(darkMode === "true" ? "dark" : "light");
      }
    </script>
    <!-- Styles -->
    <style lang="scss" is:global>
      // Remove padding, margin, and then set box-sizing

      *,
      *::after,
      *::before {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      // Webkit Scrollbar Styles

      *::-webkit-scrollbar {
        background-color: hsl(0, 0%, 93%);
        width: 0.75rem;
      }
      *::-webkit-scrollbar-thumb {
        background-color: hsl(0, 0%, 73%);
      }

      // Set new Defaults

      html {
        font-family: "Open Sans", system-ui, sans-serif;
        color: var(--theme-text-main);
      }

      a {
        color: var(--theme-text-link);
      }

      hr {
        border: none;
        border-top: 2px solid var(--theme-hr);
      }

      // Custom Buttons

      button {
        padding: 0.5em;
        border: none;
        background-color: var(--theme-button);
        color: inherit;

        &:hover {
          background-color: var(--theme-button-hover);
        }
        &:active {
          background-color: var(--theme-button-active);
        }
      }

      input,
      button {
        font-size: inherit;
      }

      input[type="text"] {
        padding: 0.25em;
        border: 1px solid var(--theme-button-active);
        width: 100%;

        &:hover {
          border: 1px solid var(--theme-button-hover);
        }

        &:disabled {
          color: var(--theme-text-grey);
          background-color: var(--theme-input-bg);
        }
      }

      input[type="checkbox"] {
        --checkbox-size: 1.5rem;
        position: relative;
        width: var(--checkbox-size);
        height: var(--checkbox-size);

        &::before {
          opacity: 1;
          content: "";
          position: absolute;
          display: inline-block;
          line-height: var(--checkbox-size);
          text-align: center;
          inset: 0;
          background-color: var(--theme-input-bg);
          border: 1px solid var(--theme-button-active);
        }

        &:hover::before {
          border: 1px solid var(--theme-button-hover);
        }
        &:active::before {
          background-color: var(--theme-button-active);
        }

        &:checked::before {
          content: "\2713";
          color: greenyellow;
          background-color: var(--theme-button);
        }
      }

      label {
        user-select: none;
      }
      input + label {
        margin-left: 0.5rem;
      }
      label > input {
        margin-right: 0.25rem;
        user-select: none;
      }
    </style>
    <style lang="scss">
      :root {
        --font-size-base: clamp(1rem, 0.3vw + 0.9rem, 1.1rem);

        --color-hue-main: 290;
        --color-hue-alt: 330;

        --header-height: 4rem;
        --main-width: 75ch;

        &,
        &.light {
          --theme-bg: hsl(var(--color-hue-main), 70%, 96%);
          --theme-hr: hsl(var(--color-hue-main), 40%, 30%);

          --theme-header: hsl(var(--color-hue-main), 45%, 80%);
          --theme-header-text: hsl(var(--color-hue-main), 45%, 17%);
          --theme-header-accent: hsl(var(--color-hue-main), 75%, 40%);
          --theme-header-button-hover: hsl(var(--color-hue-main), 45%, 76%);
          --theme-header-button-active: hsl(var(--color-hue-main), 35%, 70%);
          --theme-header-link-bar: hsl(var(--color-hue-alt), 42%, 65%);
          --theme-header-link-box: hsl(var(--color-hue-alt), 54%, 56%);
          --theme-header-link-box-hover: hsl(var(--color-hue-alt), 57%, 58%);
          --theme-header-link-text: hsl(var(--color-hue-alt), 40%, 90%);

          --theme-text-main: hsl(var(--color-hue-main), 40%, 7%);
          --theme-text-main-accent: hsl(var(--color-hue-main), 70%, 40%);
          --theme-text-alt: hsl(var(--color-hue-alt), 40%, 7%);
          --theme-text-alt-accent: hsl(var(--color-hue-alt), 40%, 55%);
          --theme-text-grey: hsl(0, 0%, 60%);

          --theme-card: hsl(var(--color-hue-main), 80%, 90%);
          --theme-card-alt: hsl(var(--color-hue-alt), 80%, 90%);
          --theme-card-alt-outline: hsl(var(--color-hue-alt), 40%, 72%);
          --theme-button: hsl(var(--color-hue-main), 60%, 82%);
          --theme-button-hover: hsl(var(--color-hue-main), 40%, 80%);
          --theme-button-active: hsl(var(--color-hue-main), 40%, 78%);
          --theme-button-inactive: hsl(var(--color-hue-main), 40%, 100%);
          --theme-button-disabled: hsl(var(--color-hue-main), 40%, 92%);
          --theme-button-text: hsl(var(--color-hue-alt), 80%, 34%);
          --theme-input-bg: hsl(var(--color-hue-alt), 0%, 100%);
        }

        // Dark mode
        &.dark {
          --theme-bg: hsl(var(--color-hue-main), 16%, 31%);
          --theme-hr: hsl(var(--color-hue-main), 20%, 80%);

          --theme-header: hsl(var(--color-hue-main), 30%, 22%);
          --theme-header-text: hsl(var(--color-hue-main), 45%, 97%);
          --theme-header-accent: hsl(var(--color-hue-main), 40%, 65%);
          --theme-header-button-hover: hsl(var(--color-hue-main), 30%, 32%);
          --theme-header-button-active: hsl(var(--color-hue-main), 30%, 37%);
          --theme-header-link-bar: hsl(var(--color-hue-alt), 42%, 25%);
          --theme-header-link-box: hsl(var(--color-hue-alt), 54%, 32%);
          --theme-header-link-box-hover: hsl(var(--color-hue-alt), 57%, 38%);
          --theme-header-link-text: hsl(var(--color-hue-alt), 10%, 86%);

          --theme-text-main: hsl(var(--color-hue-main), 40%, 97%);
          --theme-text-main-accent: hsl(var(--color-hue-main), 55%, 77%);
          --theme-text-link: hsl(var(--color-hue-main), 70%, 70%);
          --theme-text-alt: hsl(var(--color-hue-alt), 40%, 7%);
          --theme-text-alt-accent: hsl(var(--color-hue-alt), 40%, 55%);
          --theme-text-grey: hsl(0, 0%, 60%);

          --theme-card: hsl(var(--color-hue-main), 25%, 20%);
          --theme-card-alt: hsl(var(--color-hue-alt), 25%, 20%);
          --theme-card-alt-outline: hsl(var(--color-hue-alt), 25%, 42%);
          --theme-button: hsl(var(--color-hue-main), 30%, 47%);
          --theme-button-hover: hsl(var(--color-hue-main), 25%, 40%);
          --theme-button-active: hsl(var(--color-hue-main), 25%, 44%);
          --theme-button-inactive: hsl(var(--color-hue-main), 40%, 100%);
          --theme-button-disabled: hsl(var(--color-hue-main), 40%, 92%);
          --theme-button-text: hsl(var(--color-hue-alt), 80%, 34%);
          --theme-input-bg: hsl(var(--color-hue-alt), 10%, 80%);
        }
      }

      html {
        font-size: var(--font-size-base);
      }

      body {
        background-color: var(--theme-bg);
        color: var(--theme-text-main);
      }

      main {
        max-width: var(--main-width);
        margin-inline: auto;
        padding: 1rem;

        &.no-pad {
          padding: 0;
        }
        &.no-max-width {
          max-width: initial;
        }

        > * + * {
          margin-top: 1rem;
        }
      }
    </style>
  </head>
  <body>
    <Header subpage={subpageLink} />
    <main class={optionalClasses.join(" ")}>
      <slot />
    </main>
  </body>
</html>
